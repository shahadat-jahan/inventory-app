<?php

namespace Database\Seeders;

use App\Models\User;
use App\Models\Product;
use App\Models\Supplier;
use App\Models\Warehouse;
use App\Models\Customer;
use App\Models\WorkOrder;
use App\Models\PurchaseOrder;
use App\Models\SalesOrder;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)->create();

        User::firstOrCreate(
            ['email' => 'test@example.com'],
            [
                'name' => 'Test User',
                // Password will be generated by factory if model events are triggered,
                // but ensure a value if not present
                'password' => bcrypt('password'),
            ]
        );

        Product::factory()->count(25)->create();
        Supplier::factory()->count(15)->create();
        Warehouse::factory()->count(8)->create();
        Customer::factory()->count(20)->create();

        // Create some work orders, purchase orders, and sales orders using existing records
        $products = Product::all();
        $suppliers = Supplier::all();
        $customers = Customer::all();

        for ($i = 0; $i < 10; $i++) {
            WorkOrder::factory()->create([
                'product_id' => $products->random()->id,
            ]);
        }

        for ($i = 0; $i < 12; $i++) {
            PurchaseOrder::factory()->create([
                'supplier_id' => $suppliers->random()->id,
            ]);
        }

        for ($i = 0; $i < 15; $i++) {
            SalesOrder::factory()->create([
                'customer_id' => $customers->random()->id,
            ]);
        }
    }
}
